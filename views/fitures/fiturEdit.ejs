<div class="container">
  <h1>Edit Feature</h1>
  <div id="responseMessage" class="alert"></div>
  <% if (!feature) { %>
  <p class="alert alert-warning">Artikel atau info tidak ada!</p>
  <% } else { %>
  <form id="featureForm" class="contin" method="post" enctype="multipart/form-data">
    <input type="hidden" id="featureId" name="featureId" value="<%= feature._id %>" />
    <!-- Menyimpan ID fitur -->

    <label for="title">Title:</label>
    <input type="text" id="title" name="title" value="<%= feature.title %>" required />

    <label for="description">Description:</label>
    <input type="text" id="description" name="description" value="<%= feature.description %>" required />

    <label for="content">Content:</label>
    <textarea id="content" name="content"><%= feature.content %></textarea>

    <label for="image">Image:</label>
    <input type="file" id="image" name="image" />

    <button class="mt-1 btn btn-success mb-3" type="submit">Update Feature</button>
  </form>

  <% } %>
  <a class="" href="/dashboard">Back to Home</a>
</div>

<script src="https://cdn.tiny.cloud/1/99mw3o6b0762hami5kgurnk6fz2kwxaetpu0xeq06io9j7fw/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
<script>
  tinymce.init({
    selector: '#content',
    plugins: 'lists link image table',
    toolbar: 'undo redo | styleselect | bold italic | alignleft aligncenter alignright | bullist numlist outdent indent | link image | table',
    menubar: true,
    height: 300,
  });

  document.getElementById('featureForm').addEventListener('submit', async function (event) {
    event.preventDefault(); // Mencegah pengiriman formulir default

    const content = tinymce.get('content').getContent(); // Ambil konten dari TinyMCE
    const title = document.getElementById('title').value;
    const description = document.getElementById('description').value;
    const featureId = document.getElementById('featureId').value; // Ambil ID fitur

    // Validasi: Pastikan konten tidak kosong
    if (!title || !description || !content) {
      alert('Please fill in all required fields.');
      return; // Hentikan pengiriman jika ada yang kosong
    }

    const formData = new FormData(this); // Mengambil data dari formulir
    formData.set('content', content); // Set konten TinyMCE ke FormData

    try {
      const response = await fetch(`/fitures/edit/${featureId}`, {
        method: 'POST',
        body: formData,
      });

      const result = await response.json();
      const responseMessage = document.getElementById('responseMessage');

      responseMessage.classList.remove('alert-success', 'alert-danger'); // Kosongkan kelas sebelumnya

      if (response.ok) {
        // Tampilkan pesan sukses
        responseMessage.classList.add('alert-success');
        responseMessage.textContent = result.message.pesan; // Ganti dengan pesan dari server

        // Mengisi kembali form dengan data terbaru
        document.getElementById('featureId').value = result.feature._id; // Pastikan ini sesuai dengan respons yang Anda terima
        document.getElementById('title').value = result.feature.title;
        document.getElementById('description').value = result.feature.description;
        tinymce.get('content').setContent(result.feature.content); // Mengisi konten TinyMCE dengan konten terbaru
      } else {
        // Tampilkan pesan error
        responseMessage.classList.add('alert-danger');
        responseMessage.textContent = result.message.pesan; // Ganti dengan pesan dari server
      }
    } catch (error) {
      console.error('Error:', error);
      const responseMessage = document.getElementById('responseMessage');
      responseMessage.classList.remove('alert-success'); // Hapus kelas sukses jika ada
      responseMessage.classList.add('alert-danger');
      responseMessage.textContent = 'Gagal mengirim data';
    }
  });
</script>
